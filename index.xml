<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>üè° Home on Thuyen&#39;s corner</title>
    <link>https://trinhngocthuyen.github.io/</link>
    <description>Recent content in üè° Home on Thuyen&#39;s corner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 05 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://trinhngocthuyen.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>https://trinhngocthuyen.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/about/</guid>
      <description>Welcome to Thuyen&amp;rsquo;s corner!
I am Thuyen Trinh. I am currently based in Ho Chi Minh city, Vietnam. As a &amp;ldquo;young&amp;rdquo; developer, I find myself in a thirst of knowledge, not only about programming, but also other interesting stuffs.
I believe sharing culture lies at the heart of spreading knowledge and acquiring more in return. Also, by writing down your understanding, we are challenging ourselves to become a self-teacher, which is a perfect mean of systematizing and reinforcing your knowledge.</description>
    </item>
    
    <item>
      <title>SG vs. SG (p2)</title>
      <link>https://trinhngocthuyen.github.io/misc/sg-vs-sg-2/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/sg-vs-sg-2/</guid>
      <description>Ti·∫øp n·ªëi nh·ªØng so s√°nh vui gi·ªØa Singapore v√† Vi·ªát Nam (du·ªõi g√≥c nh√¨n ch·ªß quan c·ªßa b·∫°n) ·ªü post l·∫ßn tr∆∞·ªõc, b√†i vi·∫øt n√†y s·∫Ω ƒë·ªÅ c·∫≠p m·ªôt s·ªë kh√≠a c·∫°nh v·ªÅ c√¥ng vi·ªác. M√¨nh vi·∫øt ng·∫´u nhi√™n, kh√¥ng theo m·ªôt h·ªá th·ªëng n√†o c·∫£. N√™n n·∫øu b·∫°n th·∫•y √Ω t·ª© l·ªôn x·ªôn th√¨&amp;hellip; √† m√† th√¥i&amp;hellip; c·ª© ƒë·ªçc ƒëi nh√© üòâ.
Gi·ªù l√†m vi·ªác Th∆∞·ªùng th√¨ c√°c c√¥ng ty ·ªü VN, d√π l√† tech hay non-tech, d√π l√† nh√† n∆∞·ªõc hay t∆∞ nh√¢n, ƒë·ªÅu c√≥ gi·ªù ngh·ªâ tr∆∞a.</description>
    </item>
    
    <item>
      <title>SG vs. SG (p1)</title>
      <link>https://trinhngocthuyen.github.io/misc/sg-vs-sg-1/</link>
      <pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/sg-vs-sg-1/</guid>
      <description>M√¨nh sang Singapore l√†m vi·ªác k·ªÉ t·ª´ cu·ªëi th√°ng &lt;sup&gt;2&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2018&lt;/sub&gt;. ƒê·∫øn nay ƒë√£ ng√≥t ngh√©t m·ªôt nƒÉm‚Ä¶ Nhi·ªÅu b·∫°n hay h·ªèi m√¨nh m·∫•y c√¢u h·ªèi nh∆∞ ‚Äús·ªëng b√™n ƒë√≥ ra sao?‚Äù, ‚Äúc√≥ g√¨ kh√°c so v·ªõi VN?‚Äù, ‚Äúc√¥ng vi·ªác b·ªÉn c√≥ g√¨ kh√°c ·ªü VN kh√¥ng?‚Äù. M√¨nh tr·∫£ l·ªùi nh·ªØng c√¢u h·ªèi n√†y c≈©ng nhi·ªÅu l·∫ßn n√™n ch·∫Øc vi·∫øt c√°i post cho m·ªçi ng∆∞·ªùi ƒë·ªçc. M·ªët ai h·ªèi th√¨ quƒÉng link ƒë·ªçc cho l·∫π üòÇ.</description>
    </item>
    
    <item>
      <title>üìù T·ªïng k·∫øt nƒÉm 2018</title>
      <link>https://trinhngocthuyen.github.io/misc/2018-in-review/</link>
      <pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/2018-in-review/</guid>
      <description>Nh√¨n chung, 2018 ƒë·ªëi v·ªõi m√¨nh l√† nƒÉm c·ªßa c√¥ng vi·ªác. ƒê√¢y l√† nƒÉm ƒë·∫ßu ti√™n m√¨nh s·ªëng ·ªü n∆∞·ªõc ngo√†i&amp;hellip;</description>
    </item>
    
    <item>
      <title>Swift: The downsides of lazy var (part 2)</title>
      <link>https://trinhngocthuyen.github.io/tech/swift-the-downsides-of-lazy-var-part-2/</link>
      <pubDate>Fri, 01 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/swift-the-downsides-of-lazy-var-part-2/</guid>
      <description>Continue from the previous post, we will look into a few problems when working with lazy var&amp;hellip;</description>
    </item>
    
    <item>
      <title>Swift: The downsides of lazy var (part 1)</title>
      <link>https://trinhngocthuyen.github.io/tech/swift-the-downsides-of-lazy-var-part-1/</link>
      <pubDate>Thu, 31 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/swift-the-downsides-of-lazy-var-part-1/</guid>
      <description>Lazy evaluation is a really powerful technique which enhances app performance by avoiding unecessary computation. In Swift, apart from this advantage, it also brings convenience when it comes to coding style&amp;hellip;</description>
    </item>
    
    <item>
      <title>To√°n: Tuy·ªÉn sinh PTNK 2018 (p1)</title>
      <link>https://trinhngocthuyen.github.io/reasoning/toan-tuyen-sinh-ptnk-2018-p1/</link>
      <pubDate>Wed, 30 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reasoning/toan-tuyen-sinh-ptnk-2018-p1/</guid>
      <description>C√πng gi·∫£i ƒë·ªÅ thi tuy·ªÉn sinh (v√†o l·ªõp 10 chuy√™n To√°n) Ph·ªï Th√¥ng NƒÉng Khi·∫øu, nƒÉm 2018 n√†o. Trong ƒë·ªÅ c√≥ m·ªôt c√¢u b·∫•t ƒë·∫≥ng th·ª©c nh∆∞ sau&amp;hellip;</description>
    </item>
    
    <item>
      <title>Config: Run shell script on login</title>
      <link>https://trinhngocthuyen.github.io/tech/config-run-shell-script-on-login/</link>
      <pubDate>Tue, 20 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/config-run-shell-script-on-login/</guid>
      <description>Sometimes, I got frustrated with the fact that my SSH keys were cleared from agents after rebooting. As a result, I had to manually add those keys to agents every time my computer restarted (although it&amp;rsquo;s not occasional)&amp;hellip; It&amp;rsquo;s best to automate such tasks - I thought. So, I asked &amp;ldquo;how to run a shell script on login?&amp;rdquo;. And here are some solutions</description>
    </item>
    
    <item>
      <title>Reading: Week 08, Feb 19 - Feb 25</title>
      <link>https://trinhngocthuyen.github.io/reading/reading-week-08-feb-19-feb-25/</link>
      <pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reading/reading-week-08-feb-19-feb-25/</guid>
      <description>[5] Flavors of Engineering Management  #software-engineering #management - Benjamin pointed out some different types of engineering management. The three mentioned varies from responsibilities, team size and coverage of expertise. - One key thing I take from the post is the potential risk of the combination of multiple roles in a single person.
 One of the biggest risks is micromanagement because the manager still works as a contributor on the team.</description>
    </item>
    
    <item>
      <title>Markov chain: What is a Markov chain?</title>
      <link>https://trinhngocthuyen.github.io/tech/markov-chain-part-1/</link>
      <pubDate>Wed, 31 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/markov-chain-part-1/</guid>
      <description>Markov chain is a very important piece of probability and statistics. One application we could name is Markov Decision Process (MDP) used for decision making. Another one is Markov chain Monte Carlo (MCMC), a popular sampling method in statistics. You may also know Google PageRank algorithm, which is part of the ground of Google indexing technology. The algorithm is implemented on top of this concept&amp;hellip;</description>
    </item>
    
    <item>
      <title>Reading: Week 05, Jan 29 - Feb 04</title>
      <link>https://trinhngocthuyen.github.io/reading/reading-week-05-jan-29-feb-04/</link>
      <pubDate>Tue, 30 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reading/reading-week-05-jan-29-feb-04/</guid>
      <description>[8] M·ªôt v√†i ghi ch√∫ v·ªÅ CMS GC  #programming #gc - B√†i vi·∫øt r·∫•t hay. Th·∫≠t ra ƒë√¢y l√† m·ªôt concept chung cho c√°c ng√¥n ng·ªØ l·∫≠p tr√¨nh, kh√¥ng ri√™ng g√¨ Java. M·ªói ng√¥n ng·ªØ c√≥ th·ªÉ d√πng c√°c c∆° ch·∫ø d·ªçn r√°c kh√°c nhau&amp;hellip; C√°ch t·ªï ch·ª©c v√πng nh·ªõ ra c√°c v√πng Eden, Survivor, Tenured trong b√†i th√¨ Java-specific. Tuy nhi√™n, c√°ch ph√¢n ho·∫°ch v√† h√†nh vi nh∆∞ v·∫≠y gi·ªëng nh∆∞ h√†nh vi c·ªßa Copying collector (c·ª• th·ªÉ l√† Generational collector) nh·ªâ?</description>
    </item>
    
    <item>
      <title>T·∫£n m·∫°n: Chung k·∫øt U23 Ch√¢u √Å</title>
      <link>https://trinhngocthuyen.github.io/misc/tan-man-chung-ket-u23-chau-a/</link>
      <pubDate>Sat, 27 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/tan-man-chung-ket-u23-chau-a/</guid>
      <description>M·∫∑c d√π kh√¥ng ph·∫£i fan b√≥ng ƒë√°, nh∆∞ng t√¥i ƒë√£ cho m√¨nh m·ªôt c∆° h·ªôi ƒë·ªÉ xem tr·∫≠n ƒë·∫•u ƒë∆∞·ª£c mong ƒë·ª£i n√†y. Ti·∫øc th·∫≠t, b√†n thua ·ªü nh·ªØng gi√¢y ph√∫t cu·ªëi c√πng lu√¥n lu√¥n ƒë·∫Øng nh·∫•t. Nh∆∞ ƒë√£ x√°c ƒë·ªãnh r√µ, b√≥ng ƒë√° kh√¥ng b√† con g√¨ nhi·ªÅu ƒë·∫øn t√¥i. Nh∆∞ng ch·ª©ng ki·∫øn m√†n thua nh∆∞ th·∫ø n√†y qu·∫£ khi·∫øn cho t√¥i th·∫•y c√≥ ch√∫t bu·ªìn.</description>
    </item>
    
    <item>
      <title>T·∫£n m·∫°n: C√¢u h·ªèi t·ªìi hay l√† s·ª± h·ªùi h·ª£t</title>
      <link>https://trinhngocthuyen.github.io/reasoning/tan-man-cau-hoi-toi-hay-la-su-hoi-hot/</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reasoning/tan-man-cau-hoi-toi-hay-la-su-hoi-hot/</guid>
      <description>C√≥ nhi·ªÅu l·∫ßn m√¨nh th·∫•y c√≥ ng∆∞·ªùi h·ªèi nh·ªØng c√¢u h·ªèi khi·∫øn m√¨nh ƒë·ªçc v√†o ch·∫≥ng mu·ªën tr·∫£ l·ªùi (n·∫øu c√≥ kh·∫£ nƒÉng tr·∫£ l·ªùi). M·ªôt v√≠ d·ª• ƒëi·ªÉn h√¨nh l√† ‚Äúanh ∆°i, sao c√°i n√†y em build kh√¥ng ƒë∆∞·ª£c?‚Äù. B·∫£n th√¢n m√¨nh c·∫£m th·∫•y ƒë√¢y l√† m·ªôt c√¢u h·ªèi r·∫•t chung chung v√† thi·∫øu th√¥ng tin. N·∫øu b·∫°n l√† dev th√¨ h·∫≥n l√† b·∫°n ƒë√£ ph·∫£i s·∫•p m·∫∑t v·ªõi nh·ªØng c√°i bugs m√† ta ph·∫£i ch·ª≠i b·ªõi c·∫£ ti·∫øng ƒë·ªìng h·ªì con b·ªç (bugs) m·ªõi nghe ƒëi·∫øc l·ªó tai m√† chui ra ngo√†i. ƒê√≥ l√† khi ta c√≥ ƒë·∫ßy ƒë·ªß th√¥ng tin. C√≤n thi·∫øu th√¥ng tin nh∆∞ tr√™n th√¨‚Ä¶ ta ch·ªâ bi·∫øt c√°ch ra ngo√†i v∆∞·ªùn b·∫Øt con b·ªç m√† tra kh·ªèi xem ƒë·ªìng b·ªçn c·ªßa n√≥ ·ªü ƒë√¢u trong c√°i m·ªõ code c·ªßa m√¨nh.</description>
    </item>
    
    <item>
      <title>Reading: Week 04, Jan 22 - Jan 28</title>
      <link>https://trinhngocthuyen.github.io/reading/reading-week-04-jan-22-jan-28/</link>
      <pubDate>Mon, 22 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reading/reading-week-04-jan-22-jan-28/</guid>
      <description>[6] December Book ‚Äì Flatland  #reading #books - H·ªìi l√¢u m√¨nh c≈©ng ƒë√£ c√≥ 1 b√†i vi·∫øt v·ªÅ Flatland, nh∆∞ng ƒë√≥ l√† review c·ªßa b·ªô phim ho·∫°t h√¨nh. B·∫°n c√≥ th·ªÉ xem b√†i vi·∫øt ·ªü ƒë√¢y. B·ªô phim khi·∫øn m√¨nh r·∫•t th√≠ch th√∫. - V·ªÅ s√°ch, th√¨ review tr√™n goodreads kh√¥ng ƒë∆∞·ª£c t·ªët nh∆∞ mong ƒë·ª£i (~3.81&amp;frasl;5) so v·ªõi nh·ªØng cu·ªën kh√°c (h·∫ßu h·∫øt ƒë·ªÅu tr√™n 4.0/5). - Review trong blog post tr√™n n√™u b·∫≠t ƒë∆∞·ª£c n·ªôi dung ch√≠nh, v√† khi·∫øn m√¨nh th·∫•y h·∫•p d·∫´n.</description>
    </item>
    
    <item>
      <title>T·∫£n m·∫°n: Chuy·ªán thuy·∫øt tr√¨nh</title>
      <link>https://trinhngocthuyen.github.io/misc/tan-man-chuyen-thuyet-trinh/</link>
      <pubDate>Sat, 20 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/tan-man-chuyen-thuyet-trinh/</guid>
      <description>Su·ªët 2 c·∫•p h·ªçc c∆° s·ªü: ti·ªÉu h·ªçc v√† trung h·ªçc, t√¥i ch∆∞a h·ªÅ c√≥ m·ªôt √Ω ni·ªám n√†o v·ªÅ thu·∫≠t ng·ªØ thuy·∫øt tr√¨nh. H·∫ßu h·∫øt c√°c b√†i gi·∫£ng c·ªßa c√°c th·∫ßy c√¥ mang n·∫∑ng t√≠nh ghi ch√©p. Dƒ© nhi√™n ƒë·ªëi v·ªõi nh·ªØng m√¥n To√°n, L√Ω, H√≥a&amp;hellip; th√¨ ƒëi·ªÅu ƒë√≥ b√¨nh th·∫•y v·∫´n kh√¥ng tr·ªü ng·∫°i l·∫Øm. Nh∆∞ng m·∫•y m√¥n S·ª≠, ƒê·ªãa&amp;hellip; th√¨ t√¥i th·∫•y ch√°n ng√°n v√¨ ph·∫£i ch√©p nh·ªØng th·ª© trong SGK ƒë√£ c√≥ theo vƒÉn phong c·ªßa ng∆∞·ªùi kh√°c.</description>
    </item>
    
    <item>
      <title>Reading: Week 03, Jan 15 - Jan 21</title>
      <link>https://trinhngocthuyen.github.io/reading/reading-week-03-jan-15-jan-21/</link>
      <pubDate>Mon, 15 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reading/reading-week-03-jan-15-jan-21/</guid>
      <description>[5] Spaced repitition in learning theory  #learning #methodology - Without revision, we tend to forget things not long after we have just learned it. The forgetting curve is set to drop dramatically then. So it&amp;rsquo;s better to review when we start forgetting. Normally, the interval since the last revision extends. For example, 3 days after learning something new, review it. Then take the next review 5 days later, then 7 days later&amp;hellip; - A difficulty of applying this technique is to determine when to review.</description>
    </item>
    
    <item>
      <title>Reading: Week 02, Jan 08 - Jan 14</title>
      <link>https://trinhngocthuyen.github.io/reading/reading-week-02-jan-08-jan-14/</link>
      <pubDate>Thu, 11 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reading/reading-week-02-jan-08-jan-14/</guid>
      <description>[6] Artwork Personalization at Netflix  #netflix #technology #recommendation - I really üíõ this article. Selection recommendation is not only about suggesting items that match users&amp;rsquo; interests but also about personalizing suggestions based on their perferences. For example, it may be better if we display a romance scene as the artwork of a movie if users tend to watch romance movies. Another typical example is using an artwork that has a character of their interest in order to increase users&amp;rsquo; engagement.</description>
    </item>
    
    <item>
      <title>Indicator r.v.s and the fundamental bridge</title>
      <link>https://trinhngocthuyen.github.io/tech/indicator-rvs-and-the-fundamental-bridge/</link>
      <pubDate>Thu, 04 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/indicator-rvs-and-the-fundamental-bridge/</guid>
      <description>Expectation (also called expected value or mean) is a very important concept in probability and statistics. One usage we could name is estimation in statistics in which we try to infer the parameters of a statistical model. Another simple application is the step of sanity checks in training a nerual network: verify if the loss function gives a value which is acceptably around its expectation&amp;hellip;</description>
    </item>
    
    <item>
      <title>Reading: Week 01, Jan 01 - Jan 07, 2018</title>
      <link>https://trinhngocthuyen.github.io/reading/reading-week-01-jan-01-jan-07-2018/</link>
      <pubDate>Tue, 02 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reading/reading-week-01-jan-01-jan-07-2018/</guid>
      <description>Jan 07, 2018 [7] The 5 Problem-Solving Skills of Great Software Developers  #advice - I particularly enjoy the example of making coffee and how it demonstrates the similarity between software engineering and usual activities. Putting aside software engineering stuff, a typical person also attempts to achieve such ultimate goals (the skills mentioned).
Jan 05, 2018 [6] MCE 2014: Jon Reid - Test Driven Development for iOS (and anything)  #testing - Great talk!</description>
    </item>
    
    <item>
      <title>2017 in review</title>
      <link>https://trinhngocthuyen.github.io/misc/2017-in-review/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/2017-in-review/</guid>
      <description>P/s: Vietnamese below.
 Unemployed. After leaving Fossil, I lost my balance. There was a time I had not seen any of my friends. I missed them as much as I missed my work :). Acquired some new knowledge. While being out of work, I took part in a few courses in Coursera, MIT Opencourseware and so on. Some courses did bring me plenty of interests, headaches, and mind-blowing moments as well.</description>
    </item>
    
    <item>
      <title>Reading: Week 52, Dec 25 - Dec 31</title>
      <link>https://trinhngocthuyen.github.io/reading/reading-week-52-dec-25-dec-31/</link>
      <pubDate>Sun, 31 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reading/reading-week-52-dec-25-dec-31/</guid>
      <description>Dec 30, 2017 [4] [Quora] I have a toddler. How should she prepare herself for the job market 15 years from now in the world of AI? Should I teach her Python as soon as she is willing to learn? - Interesting question! Early education is crucially important. Letting children get exposed to such materials is a very good mean of preparation for their future. This reminds me of a documentary I watched on Netflix last week: &amp;ldquo;The Mars generation&amp;rdquo;&amp;hellip; A generation of teenage scientists, explorers, and those who carries human&amp;rsquo;s quests for conquering the universe.</description>
    </item>
    
    <item>
      <title>T·∫£n m·∫°n: Khi ch√∫ng ta c√≥ nhi·ªÅu l·ª±a ch·ªçn</title>
      <link>https://trinhngocthuyen.github.io/reasoning/random-thoughts-when-we-have-many-choices/</link>
      <pubDate>Tue, 26 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reasoning/random-thoughts-when-we-have-many-choices/</guid>
      <description>Khi n√≥i ƒë·∫øn gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ, ng∆∞·ªùi ta ƒë√¥i khi d√πng m·ªôt c·ª•m d√†i h∆°n l√† gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ v√† ra quy·∫øt ƒë·ªãnh (problem solving and decision making). Ta c√≥ th·ªÉ hi·ªÉu vi·ªác gi·∫£i b√†i to√°n th√¥ng qua hai h√¨nh th√°i: &lt;br&gt;(1) T·ª´ kh√¥ng c√≥ l·ªùi gi·∫£i -&amp;gt; c√≥ l·ªùi gi·∫£i&lt;br&gt;(2) T·ª´ c√≥ nhi·ªÅu l·ªùi gi·∫£i -&amp;gt; ch·ªçn ra l·ªùi gi·∫£i t·ªëi ∆∞u&amp;hellip;</description>
    </item>
    
    <item>
      <title>MVVM best practice: Inputs - Outputs</title>
      <link>https://trinhngocthuyen.github.io/tech/mvvm-best-practice-inputs-outputs/</link>
      <pubDate>Wed, 20 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/mvvm-best-practice-inputs-outputs/</guid>
      <description>When it comes to iOS architecture, MVVM is one of the most favorable candidates. Not only does it provide higher testability than MVC but also this architecture is lightweight as compared to its counterparts such as VIPER. Despite that, proper approaches should be adopted to take advantage of MVVM. Otherwise, we could end up with an alike version of MVC with an additional component (ViewModel).</description>
    </item>
    
    <item>
      <title>Reading: Week 51, Dec 18 - Dec 24</title>
      <link>https://trinhngocthuyen.github.io/reading/reading-week-51-dec-18-dec-24/</link>
      <pubDate>Mon, 18 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reading/reading-week-51-dec-18-dec-24/</guid>
      <description>TL-DR A plenty of technical stuff, right üòÑ? [1], [3], [5] and [7] are good posts to read.
Short on time? Pick [3] and [5]. They are the best among this list.
Dec 23, 2017 [8] Fowl Language: AI Decodes the Nuances of Chicken ‚ÄúSpeech‚Äù - Chicken chatter is not simply random noise. A üê•&amp;rsquo;s sound typically follows specific patterns which express specific messages. By conveying these using machine learning, we could improve farming.</description>
    </item>
    
    <item>
      <title>Reading: Week 50, Dec 11 - Dec 17</title>
      <link>https://trinhngocthuyen.github.io/reading/reading-week-50-dec-11-dec-17/</link>
      <pubDate>Mon, 11 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reading/reading-week-50-dec-11-dec-17/</guid>
      <description>At a glance  You are interested in popular science and general knowledge: [2] and [9] are for you. You are an iOS developer: [4], [5], [6] and [11] are worth a look. Finally, the book in [8] is awesome!  Dec 17, 2017 [11] Friday Q&amp;amp;A 2017-12-08: Type Erasure in Swift #ios #protocols #generic #type-safety - This post discussed several approaches towards type-easure. The underlying functions approach is the same as what I blogged a while ago in Swift: Generic protocol (p.</description>
    </item>
    
    <item>
      <title>ƒê·ªãnh l√Ω cu·ªëi c√πng c·ªßa Fermat</title>
      <link>https://trinhngocthuyen.github.io/misc/fermats-last-theorem/</link>
      <pubDate>Fri, 08 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/fermats-last-theorem/</guid>
      <description>Kho·∫£ng 5-6 th√°ng tr∆∞·ªõc m√¨nh xem m·ªôt b·ªô phim t√†i li·ªáu c√≥ t·ª±a ƒë·ªÅ &amp;ldquo;BBC - Horizon - 1996 - Fermat‚Äôs Last Theorem&amp;rdquo;. ƒê√¢y l√† m·ªôt c√¢u chuy·ªán v·ªÅ l·ªãch s·ª≠ to√°n h·ªçc m√† m√¨nh th·∫•y r·∫•t hay n√™n mu·ªën chia s·∫ª l·∫°i. Fermat l√† m·ªôt nh√† to√°n h·ªçc ng∆∞·ªùi Ph√°p. √îng c√≥ nhi·ªÅu ƒë√≥ng g√≥p quan tr·ªçng trong l√Ω thuy·∫øt s·ªë (number theory). M·ªôt trong s·ªë ƒë√≥ l√† ƒë·ªãnh l√Ω Fermat l·ªõn, hay ƒë·ªãnh l√Ω cu·ªëi c√πng c·ªßa Fermat (Fermat‚Äôs Last Theorem).</description>
    </item>
    
    <item>
      <title>Reading: Week 49, Dec 04 - Dec 10</title>
      <link>https://trinhngocthuyen.github.io/reading/reading-week-49-dec-04-dec-10/</link>
      <pubDate>Mon, 04 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reading/reading-week-49-dec-04-dec-10/</guid>
      <description>Dec 10, 2017  Interactive visualizations of sampling and GP regression #probability #statistics #sampling
&amp;ndash;&amp;gt; Blog post n√†y gi·ªõi thi·ªáu (open-source) interative demo v·ªÅ MCMC (Markov Chain Monte Carlo) v√† Gaussian Process. M√¨nh ch∆∞a bi·∫øt v·ªÅ Gaussian Process, nh∆∞ng ƒë√£ c√≥ t√¨m hi·ªÉu v·ªÅ MCMC v√† th·∫•y r·∫•t hay. Ok, s·∫Ω t√¨m hi·ªÉu v·ªÅ Gaussian Process, v√† c≈©ng s·∫Ω th·ª≠ vi·∫øt 1 b√†i nh·ªè v·ªÅ MCMC.
 B·∫Øt ƒë·∫ßu Big Data t·ª´ ƒë√¢u v√† nh∆∞ th·∫ø n√†o?</description>
    </item>
    
    <item>
      <title>Reading: Week 48, Nov 27 - Dec 03</title>
      <link>https://trinhngocthuyen.github.io/reading/reading-week-48-nov-27-dec-03/</link>
      <pubDate>Sun, 03 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reading/reading-week-48-nov-27-dec-03/</guid>
      <description>*Hola! Today witnessed the commencement of the Reading Corner. This column features a mixture of what I have read that I think is worth a look. Most of them will be like random thoughts on various topics (in brief), written in either English or Vietnamese. If you happen to read these posts and would like to share your own opinion, please feel free to leave your comment below. Will try to keep it constant :)*</description>
    </item>
    
    <item>
      <title>An example of Survey with privacy</title>
      <link>https://trinhngocthuyen.github.io/tech/an-example-of-survey-with-privacy/</link>
      <pubDate>Tue, 14 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/an-example-of-survey-with-privacy/</guid>
      <description>A while ago, I read the book Probabilistic Programming and Bayesian Methods for Hackers written by Cam Davidson-Pilon and was really impressed by an example of carrying out surveys. Although it is not a standard method with wide scope of use, from the perspective of a software engineer who is not from statistics background, I think its idea is pretty beautiful and worth knowing</description>
    </item>
    
    <item>
      <title>How to stub network in iOS</title>
      <link>https://trinhngocthuyen.github.io/tech/how-to-stub-network-in-ios/</link>
      <pubDate>Sat, 04 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/how-to-stub-network-in-ios/</guid>
      <description>There are times we wish to fake a network event, for example, a network error. However, integrating a 3rd party stub library just for this purpose is not really worthy. This post aims at demonstrating how to stub network.</description>
    </item>
    
    <item>
      <title>Quick thoughts on Tail recursion in Swift</title>
      <link>https://trinhngocthuyen.github.io/tech/quick-thoughts-on-tail-recursion-in-swift/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/quick-thoughts-on-tail-recursion-in-swift/</guid>
      <description>I always thought that Tail call optimization (TCO), sometimes called tail recursion optimization, is supported in most languages by default. It turns out to be opposite.</description>
    </item>
    
    <item>
      <title>Method Swizzling: What, Why and How</title>
      <link>https://trinhngocthuyen.github.io/tech/method-swizzling-what-why-and-how/</link>
      <pubDate>Fri, 20 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/method-swizzling-what-why-and-how/</guid>
      <description>Method swizzling is a very powerful technique that takes advantage of dynamism. The core idea of this technique is to replace the real implementation of a method at runtime. With this power, we could be able to do a lot of cool stuffs. Actually, this special feature is offered by the Objective-C runtime, via message dispatch.</description>
    </item>
    
    <item>
      <title>Method dispatch in Swift</title>
      <link>https://trinhngocthuyen.github.io/tech/method-dispatch-in-swift/</link>
      <pubDate>Mon, 25 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/method-dispatch-in-swift/</guid>
      <description>Method dispatch is a term referring to mechanisms by which the program determines which operation should be executed (by operation, I mean a set of instructions). There are times we expect a method behavior to be determined only at runtime. This motivation give rise to different mechanisms of dispatching a method, each of which has its own pros and cons.</description>
    </item>
    
    <item>
      <title>How a Swift file is compiled</title>
      <link>https://trinhngocthuyen.github.io/tech/how-a-swift-file-is-compiled/</link>
      <pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/how-a-swift-file-is-compiled/</guid>
      <description>First of all, this is not &amp;ldquo;how an iOS/MacOS app is built&amp;rdquo;. An app consists of a bunch of source code files, structured in modules/frameworks, each of which could be purely in swift/objective-c, or mixed and match&amp;hellip;</description>
    </item>
    
    <item>
      <title>What is Simpson&#39;s paradox?</title>
      <link>https://trinhngocthuyen.github.io/tech/what-is-simpsons-paradox/</link>
      <pubDate>Thu, 07 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/what-is-simpsons-paradox/</guid>
      <description>If you&amp;rsquo;re from the world of statistics, you may have heard of it. Two doctors, Dr. Hibbert and Dr. Nick, both perform 2 types of surgeries: heart surgery and band-aid removal&amp;hellip;</description>
    </item>
    
    <item>
      <title>Brain exercising #1</title>
      <link>https://trinhngocthuyen.github.io/reasoning/brain-exercising-1/</link>
      <pubDate>Wed, 30 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reasoning/brain-exercising-1/</guid>
      <description>I happened to see this problem on Twitter. It reminded me of my secondary school when I was passionate about solving math problems :)&amp;hellip; I am thinking of a little corner of this blog for this sort of exercising.
Claim: If $p$ is prime, all the coefficients in $(a+b)^p$ except the first and the last are divisible by $p$.
If p is prime, all the coefficients in (a+b)^p except the first and last are divisible by p.</description>
    </item>
    
    <item>
      <title>A misuse of Expectation</title>
      <link>https://trinhngocthuyen.github.io/tech/a-misuse-of-expectation/</link>
      <pubDate>Sun, 30 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/a-misuse-of-expectation/</guid>
      <description>This post is to demonstrate a common use of expectation that is not correct. The example is excerpted from lecture 23 of MIT6_042J</description>
    </item>
    
    <item>
      <title>Weight initialization - impact on layer distribution</title>
      <link>https://trinhngocthuyen.github.io/tech/weight-initialization/</link>
      <pubDate>Tue, 25 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/weight-initialization/</guid>
      <description>This post covers some experiments to demonstrate the impact of weight initialization on the distribution of activations on each layer in neural network, especially the very last layers.</description>
    </item>
    
    <item>
      <title>A dive into Histogram of Oriented Gradients (HOG)</title>
      <link>https://trinhngocthuyen.github.io/tech/a-dive-into-hog/</link>
      <pubDate>Thu, 13 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/a-dive-into-hog/</guid>
      <description>In this post, we will dive into Histogram of Oriented Gradients (HOG), a common technique used to extract features of images&amp;hellip; And then implement it in python (in order to comprehend it).</description>
    </item>
    
    <item>
      <title>Dark matter, Dark energy l√† g√¨?</title>
      <link>https://trinhngocthuyen.github.io/misc/dark-matter-dark-energy/</link>
      <pubDate>Wed, 05 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/dark-matter-dark-energy/</guid>
      <description>C√°ch ƒë√¢y kh√¥ng l√¢u, t√¥i t√¨nh c·ªù xem 1 video tr√™n TED talk v·ªÅ ch·ªß ƒë·ªÅ V≈© tr·ª• h·ªçc &amp;ldquo;Shedding light on dark matter&amp;rdquo;, r·ªìi sau ƒë√≥ coi 1 lo·∫°t c√°c phim t√†i li·ªáu v·ªÅ ch·ªß ƒë·ªÅ n√†y&amp;hellip; Post n√†y t√≥m t·∫Øt l·∫°i nh·ªØng g√¨ m√¨nh hi·ªÉu ·ªü m·ª©c √Ω ni·ªám (n√™n c√≥ th·ªÉ c√≥ nh·ªØng ch·ªó hi·ªÉu ch∆∞a ch√≠nh x√°c)</description>
    </item>
    
    <item>
      <title>Th√°ng 6 m√πa thi...</title>
      <link>https://trinhngocthuyen.github.io/misc/thang-6-mua-thi/</link>
      <pubDate>Tue, 02 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/thang-6-mua-thi/</guid>
      <description>Th√°ng 5 m√πa chia tay, th√°ng 6 m√πa thi&amp;hellip; Nh·ªØng k√Ω ·ª©c ch·ª£t √πa v·ªÅ. C√°c b·∫°n h·ªçc sinh l·ªõp 9 ƒë√£ b∆∞·ªõc v√†o nh·ªØng ng√†y thi v√†o l·ªõp 10.¬†ƒê√∫ng ch·ª•c nƒÉm tr∆∞·ªõc, t√¥i c≈©ng ƒë√£ tr·∫£i qua c·∫£m gi√°c t∆∞∆°ng t·ª±&amp;hellip;</description>
    </item>
    
    <item>
      <title>T·∫£n m·∫°n 04/04/2017</title>
      <link>https://trinhngocthuyen.github.io/misc/tan-man-04-04-2017/</link>
      <pubDate>Tue, 04 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/tan-man-04-04-2017/</guid>
      <description>H√¥m nay ti·∫øp t·ª•c l√† 1 ng√†y trong qu√£ng th·ªùi gian lang thang qu√°n cafe, m·∫ßn b·∫≠y m·∫ßn b·∫° ƒë·∫øn cu·ªëi ng√†y. Nghe c·ª© nh∆∞ 1 th·∫±ng t√†o lao ƒëi gi·∫øt th·ªùi gian nh·ªâ.</description>
    </item>
    
    <item>
      <title>Create custom Xcode templates</title>
      <link>https://trinhngocthuyen.github.io/tech/create-custom-xcode-templates/</link>
      <pubDate>Tue, 28 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/create-custom-xcode-templates/</guid>
      <description>Everytime we create a new file, Xcode suggests some built-in templates that may be useful. Luckily, we could also create our own templates.
Technically, Xcode looks for templates in ~/Library/Developer/Xcode/Templates and /Applications/Xcode.app/Contents/Developer/Library/Xcode/Templates. Let&amp;rsquo;s call the first path P1 and the second path P2. A template could be iferred by a folder MY_TEMPLATE.xctemplate.
Assume we gonna create a template for MVVM. It should create 3 files: [Feature]Model.swift, [Feature]ViewModel.swift and [Feature]ViewController.swift. Ex: LoginModel.</description>
    </item>
    
    <item>
      <title>FAQ on ReactiveCocoa</title>
      <link>https://trinhngocthuyen.github.io/tech/faq-on-reactivecocoa/</link>
      <pubDate>Sat, 25 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/faq-on-reactivecocoa/</guid>
      <description>This post highlights some Q&amp;amp;A related to ReactiveCocoa - a FRP framework specifically built for iOS.</description>
    </item>
    
    <item>
      <title>Garbage Collection (GC) algorithms</title>
      <link>https://trinhngocthuyen.github.io/tech/gc-algorithms/</link>
      <pubDate>Sat, 25 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/gc-algorithms/</guid>
      <description>As an iOS developer, I am quite familiar with Reference Counting. It is considered a fundamental knowledge regarding memory manangement that every iOS developers must acknowledge. Today, I figured out a few more algorithms of garbage collection.
Fig 1. From left to right: Reference Counting, Mark-Sweep, Mark-Compact, Copying. Reference Counting (RC)  This is simple &amp;amp; easy to implement. However, it has some major drawbacks one of which is not being able to deal with retain cycles.</description>
    </item>
    
    <item>
      <title>T·∫£n m·∫°n: G√°nh t√†u h≈©</title>
      <link>https://trinhngocthuyen.github.io/misc/tan-man-ganh-tau-hu/</link>
      <pubDate>Sat, 21 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/tan-man-ganh-tau-hu/</guid>
      <description>Thong dong r√£i b∆∞·ªõc ƒëi t·ª´ trong h·∫ªm ra, b√™n kia ƒë∆∞·ªùng, bi·ªÉn d·∫≠y s√≥ng. - &amp;ldquo;ƒÇn ƒë·∫≠u h≈© n√≥ng ƒëi em&amp;rdquo;. - &amp;ldquo;Hmm&amp;hellip; l√†m em 1 ch√©n, n√≥ng nghen ch·ªã&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Chuy·ªán KFC - order</title>
      <link>https://trinhngocthuyen.github.io/misc/chuyen-kfc/</link>
      <pubDate>Mon, 02 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/chuyen-kfc/</guid>
      <description>T√¥i r·∫•t √≠t khi ƒëi ra ngo√†i ƒÉn v·∫∑t b·ªüi ƒÉn u·ªëng kh√¥ng n·∫±m trong top nh·ªØng th·ª© t√¥i quan t√¢m. (N√™n khi ƒëi ƒë√¢u ch∆°i, t√¥i kh√¥ng ƒë·∫∑t n·∫∑ng v·∫•n ƒë·ªÅ ·∫©m th·ª±c, m√† l√† tr·∫£i nghi·ªám)&amp;hellip; H√¥m qua t√¥i cao h·ª©ng ƒëi ƒÉn KFC. L√† ng√†y ƒë·∫ßu nƒÉm, l·∫°i r∆°i v√†o ch·ªß nh·∫≠t, n√™n l∆∞·ª£ng kh√°ch ·ªü KFC √Çu C∆° c≈©ng ƒë√¥ng h∆°n ng√†y th∆∞·ªùng.</description>
    </item>
    
    <item>
      <title>Swift: ExpressibleByStringLiteral</title>
      <link>https://trinhngocthuyen.github.io/tech/swift-expressiblebystringliteral/</link>
      <pubDate>Sat, 03 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/swift-expressiblebystringliteral/</guid>
      <description>It is a protocol in Swift 3 (which was StringLiteralConvertible in Swift 2). The name clearly reflects the meaning that an object of a class can be expressed by a literal string</description>
    </item>
    
    <item>
      <title>Log events in ReactiveCocoa</title>
      <link>https://trinhngocthuyen.github.io/tech/log-events-in-reactivecocoa/</link>
      <pubDate>Tue, 29 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/log-events-in-reactivecocoa/</guid>
      <description>I used to spend a lot of time reading documentations of ReactiveCocoa (Framework overview, design guidlines, basic operators&amp;hellip;) but, unfortunately, missed this one&amp;hellip;</description>
    </item>
    
    <item>
      <title>A freestyle way to config UIView</title>
      <link>https://trinhngocthuyen.github.io/tech/a-freestyle-way-to-config-uiview/</link>
      <pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/a-freestyle-way-to-config-uiview/</guid>
      <description>This article is to introduce a freestyle way to set up views in iOS (by code).</description>
    </item>
    
    <item>
      <title>Chuy·ªán h·ªçc: To√°n tu·ªïi th∆° - To√°n h·ªçc tu·ªïi tr·∫ª</title>
      <link>https://trinhngocthuyen.github.io/misc/toan-tuoi-tho-toan-hoc-tuoi-tre/</link>
      <pubDate>Sun, 04 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/toan-tuoi-tho-toan-hoc-tuoi-tre/</guid>
      <description>Gi·ªù nghe t·ªõi ch·ªØ To√°n l√† ƒë·∫ßu √≥c lo·∫°n c√†o c√†o l√™n v·ªõi h√¨nh ·∫£nh d·∫•u t√≠ch ph√¢n, lu·ªπ th·ª´a, logarit&amp;hellip; ch·ª© h·ªìi c·∫•p 2 t√¥i th√≠ch h·ªçc To√°n v√¥ c√πng üòÄ. Thu·ªü ƒë√≥, m·∫•y ƒë·ª©a h·ªçc sinh tr∆∞·ªùng huy·ªán t·ª•i t√¥i kh√¥ng c√≥ ƒëi·ªÅu ki·ªán ƒë·ªÉ ti·∫øp x√∫c v·ªõi nhi·ªÅu ngu·ªìn t√†i li·ªáu. M·ªói l·∫ßn ba ch·ªü t√¥i xu·ªëng nh√† s√°ch th·ªã x√£ mua s√°ch, t√¥i h·∫ßu nh∆∞ ch·ªâ l·ª±a c√≥ m·ªói cu·ªën s√°ch ‚ÄúN√¢ng cao v√† ph√°t tri·ªÉn To√°n‚Äù (h√¨nh h·ªçc v√† ƒë·∫°i s·ªë) c·ªßa V≈© H·ªØu B√¨nh. S·ª± th·∫≠t l√†, ƒë·ª©a n√†o h·ªçc To√°n c≈©ng ƒë·ªÅu xem ƒë√¢y l√† cu·ªën s√°ch g·ªëi ƒë·∫ßu gi∆∞·ªùng. V√¨ h∆°i k√©n ch·ªçn s√°ch (1 ph·∫ßn c≈©ng l√† do gu ch·ªçn s√°ch, kh√¥ng th√≠ch m·∫•y cu·ªën gi·∫•y m√†u tr·∫Øng, d√†y, b√¨a s√°ng lo√°ng&amp;hellip;), t√¥i th·∫•y r·∫•t ƒë√≥i s√°ch. (√Äh, m·∫•y s√°ch Ti·∫øng anh, Ng·ªØ vƒÉn&amp;hellip; t√¥i kh√¥ng mua ƒë√¢u :v)</description>
    </item>
    
    <item>
      <title>T·∫£n m·∫°n: Chuy·ªán c√¢u h·ªèi</title>
      <link>https://trinhngocthuyen.github.io/misc/tan-man-chuyen-cau-hoi/</link>
      <pubDate>Sat, 30 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/tan-man-chuyen-cau-hoi/</guid>
      <description>D·∫°o n√†y c·ª© c√°ch v√†i tu·∫ßn, c√¥ng ty c√≥ th√™m v√†i ng∆∞·ªùi m·ªõi. C√≥ m·ªôt anh b·∫°n (nh·ªè h∆°n m√¨nh 1 tu·ªïi) c≈©ng m·ªõi v√†o nh∆∞ng ·ªü team kh√°c. Ku c·∫≠u l√† ng∆∞·ªùi ho·∫°t kh·∫©u, mi·ªáng n√≥i li·∫øng tho·∫Øng. M√¨nh ng·ªìi ƒë·ªëi di·ªán nhi·ªÅu l√∫c c≈©ng c·∫£m th·∫•y h∆°i ng·ªôp tai.</description>
    </item>
    
    <item>
      <title>T·∫£n m·∫°n: Chuy·ªán kh√°i ni·ªám</title>
      <link>https://trinhngocthuyen.github.io/misc/tan-man-chuyen-khai-niem/</link>
      <pubDate>Mon, 25 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/tan-man-chuyen-khai-niem/</guid>
      <description>G·∫ßn ƒë√¢y, tr√™n c√¥ng ty th∆∞·ªùng hay x·∫£y ra nh·ªØng cu·ªôc tranh lu·∫≠n trong d·ª± √°n m√† ƒëa s·ªë c√°c tr∆∞·ªùng h·ª£p l√† do kh√¥ng th·ªëng nh·∫•t trong vi·ªác hi·ªÉu m·ªôt kh√°i ni·ªám. L√†m m√¨nh nh·ªõ l·∫°i, th·∫•m th√≠a nh·ªØng c√¢u ch·ªØ c·ªßa th·∫ßy Phan D≈©ng vi·∫øt v·ªÅ &amp;ldquo;ƒê·ªãnh nghƒ©a kh√°i ni·ªám&amp;rdquo; trong cu·ªën &amp;ldquo;T∆∞ duy Logic, bi·ªán ch·ª©ng v√† h·ªá th·ªëng&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Swift: Generic protocol (p.1)</title>
      <link>https://trinhngocthuyen.github.io/tech/swift-generic-protocol-p1/</link>
      <pubDate>Sat, 25 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/swift-generic-protocol-p1/</guid>
      <description>In this article, we would look into how to implement a generic protocol. A few lacks of language support (Swift version prior to 3.0) would be also pointed out for discussion.</description>
    </item>
    
    <item>
      <title>Swift: Concrete types in Protocol</title>
      <link>https://trinhngocthuyen.github.io/tech/swift-concrete-types-in-protocol/</link>
      <pubDate>Sun, 19 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/swift-concrete-types-in-protocol/</guid>
      <description>A specific use case that we are unable to use concrete types in protocol, and how to fix it.</description>
    </item>
    
    <item>
      <title>T·∫£n m·∫°n: Chuy·ªán b√∫n b√≤</title>
      <link>https://trinhngocthuyen.github.io/misc/tan-man-chuyen-bun-bo/</link>
      <pubDate>Wed, 15 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/tan-man-chuyen-bun-bo/</guid>
      <description>S√°ng nay l√† m·ªôt bu·ªïi s√°ng ƒë·∫πp tr·ªùi. Ch·∫Øc v√¨ c∆°n m∆∞a ƒë√™m ƒë√£ r·ª≠a sach b·∫ßu tr·ªùi m√πa h·∫°. S√°ng nay t√¥i ƒë·∫°p xe ƒëi l√†m. M·ªôt d·ªãp t·ªët ƒë·ªÉ qu·∫•t 1 t√¥ b√∫n b√≤ tr∆∞·ªõc khi ƒë·∫°p g·∫ßn ch·ª•c c√¢y s·ªë ƒë·∫øn c√¥ng ty.</description>
    </item>
    
    <item>
      <title>Swift: Currying</title>
      <link>https://trinhngocthuyen.github.io/tech/swift-currying/</link>
      <pubDate>Sun, 17 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/swift-currying/</guid>
      <description>This topic has been mentioned as a part of Functional programming. Though it‚Äôs kind of fun to use currying, we often see it on the list along with functors, applicative, monads&amp;hellip; In this article, I‚Äôll show you a couple of ways to have fun with currying.</description>
    </item>
    
    <item>
      <title>Swift: Optional ‚Äî map</title>
      <link>https://trinhngocthuyen.github.io/tech/swift-optional-map/</link>
      <pubDate>Sat, 27 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/swift-optional-map/</guid>
      <description>A few experiments with optionals in Swift.</description>
    </item>
    
    <item>
      <title>T·∫£n m·∫°n m√πng 1 t·∫øt 2016</title>
      <link>https://trinhngocthuyen.github.io/misc/tan-man-mung-1-tet-2016/</link>
      <pubDate>Mon, 08 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/tan-man-mung-1-tet-2016/</guid>
      <description>Suy nghƒ© b√¢ng qu∆° nh·ªØng ng√†y t·∫øt &amp;amp; c·∫≠n t·∫øt B√≠nh Th√¢n&amp;hellip; C√≥ l·∫Ω m·ªôt trong nh·ªØng nh·ªØng ƒë·ªÅ t√†i ƒë∆∞·ª£c nh·∫Øc ƒë·∫øn nhi·ªÅu nh·∫•t nƒÉm nay l√† c√°i th·ªùi ti·∫øt l·∫°nh bu·ªët d·ªãp t·∫øt.</description>
    </item>
    
    <item>
      <title>Flatland (V√πng ƒë·∫•t ph·∫≥ng)</title>
      <link>https://trinhngocthuyen.github.io/misc/flatland-vung-dat-phang/</link>
      <pubDate>Fri, 15 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/flatland-vung-dat-phang/</guid>
      <description>ƒê√¢y l√† m·ªôt b·ªô phim ho·∫°t h√¨nh d·ª±a tr√™n ti·ªÉu thuy·∫øt ‚ÄúFlatland: A Romance of Many Dimensions‚Äù c·ªßa Edwin Abbot. B·ªô phim n√†y v·ªÅ m·∫∑t k·ªπ x·∫£o th√¨ kh√¥ng c√≥ g√¨ ƒë√°ng k·ªÉ (n·∫øu kh√¥ng mu·ªën n√≥i l√† h∆°i x·∫•u), nh∆∞ng c√°i l√¥i cu·ªën ng∆∞·ªùi xem ch√≠nh l√† c√°i √Ω t∆∞·ªüng ƒë·ªôc ƒë√°o c·ªßa phim. ƒê√∫ng ra th√¨ l·ªùi khen n√†y n√™n d√†nh t·∫∑ng cho Abbot, t√°c gi·∫£ cu·ªën s√°ch.</description>
    </item>
    
    <item>
      <title>Review s√°ch: Tr√™n ƒë∆∞·ªùng bƒÉng</title>
      <link>https://trinhngocthuyen.github.io/misc/review-sach-tren-duong-bang/</link>
      <pubDate>Sun, 10 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/review-sach-tren-duong-bang/</guid>
      <description>Tony Bu·ªïi S√°ng kh√¥ng c√≤n l√† c√°i t√™n xa l·∫° g√¨ v·ªõi c√°c b·∫°n tr·∫ª. M√¨nh c≈©ng l√† m·ªôt ng∆∞·ªùi r·∫•t th√≠ch phong c√°ch vi·∫øt c·ªßa d∆∞·ª£ng m·∫∑c d√π kh√¥ng th∆∞·ªùng xuy√™n ƒë·ªçc m·∫•y post c·ªßa d∆∞·ª£ng tr√™n fanpage.</description>
    </item>
    
    <item>
      <title>T·∫°p lu·∫≠n: t√¨m vs. ki·∫øm</title>
      <link>https://trinhngocthuyen.github.io/reasoning/tap-luan-tiem-vs-kiem/</link>
      <pubDate>Sat, 09 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reasoning/tap-luan-tiem-vs-kiem/</guid>
      <description>NƒÉm 2 ƒê·∫°i h·ªçc, tui c√≥ h·ªçc m√¥n C∆° s·ªü tr√≠ tu·ªá nh√¢n t·∫°o. Bu·ªïi h·ªçc ƒë·∫ßu ti√™n, th·∫ßy gi√°o c√≥ n√™u ra m·ªôt c√¢u h·ªèi nh∆∞ sau ‚Äút√¨m v√† ki·∫øm kh√°c nhau nh∆∞ th·∫ø n√†o?‚Äù. S·ª± th·∫≠t l√† kh√¥ng c√≥ ai trong s·ªë l≈© sinh vi√™n t·ª•i tui tr·∫£ l·ªùi c√¢u h·ªèi ƒë√≥. C√≥ th·ªÉ c√≥ ƒë·ª©a bi·∫øt c√¢u tr·∫£ l·ªùi hay √≠t nh·∫•t c√≥ m·ªôt nh·∫≠n ƒë·ªãnh n√†o ƒë√≥, c√≤n tui th√¨ m·∫∑t th·ªôn ra, gi·ªëng nh∆∞ khi b·ªã h·ªèi v·ªÅ ƒë·ªãnh nghƒ©a c·ªßa nh·ªØng kh√°i ni·ªám tr·ª´u t∆∞·ª£ng ki·ªÉu nh∆∞: ‚Äút√¨nh y√™u l√† g√¨?‚Äù, ‚Äú√Ω th·ª©c l√† g√¨?‚Äù.</description>
    </item>
    
    <item>
      <title>ƒê·ªông n√£o: Who ate the cake?</title>
      <link>https://trinhngocthuyen.github.io/reasoning/dong-nao-who-ate-the-cake/</link>
      <pubDate>Tue, 05 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reasoning/dong-nao-who-ate-the-cake/</guid>
      <description>One day, a piece of cake meant for Eric went missing. His parents, Mr. and Mrs. Tan, suspected that one of his siblings ate the piece of cake and so questioned them. Here were their answers:
Alfred said, ‚ÄúIt wasn‚Äôt Charles. It was Darius.‚Äù
Brenda said, ‚ÄúIt wasn‚Äôt Darius. It was Alfred.‚Äù
Charles said, ‚ÄúIt wasn‚Äôt Brenda. It was Darius.‚Äù
Darius said, ‚ÄúIt wasn‚Äôt Alfred. It wasn‚Äôt Charles.‚Äù
Exactly four of the eight statements were true.</description>
    </item>
    
    <item>
      <title>Chuy·ªán m∆∞a</title>
      <link>https://trinhngocthuyen.github.io/misc/chuyen-mua/</link>
      <pubDate>Tue, 10 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/chuyen-mua/</guid>
      <description>C√≥ l·∫Ω ai c≈©ng ƒë·ªÅu c√≥ 1 ch√∫t k·ª∑ ni·ªám nho nh·ªè v·ªõi m∆∞a. T√¥i c≈©ng kh√¥ng ph·∫£i m·ªôt ngo·∫°i l·ªá&amp;hellip; H√¥m nay tr·ªùi m∆∞a to. Tr√™n ƒë∆∞·ªùng ch·∫°y v·ªÅ nh√†, t√¥i nh·ªõ ƒë·∫øn Qu·∫£ng Ng√£i.</description>
    </item>
    
    <item>
      <title>V√†i d√≤ng v·ªÅ cu·ªën s·ªï</title>
      <link>https://trinhngocthuyen.github.io/misc/vai-dong-ve-cuon-so/</link>
      <pubDate>Sun, 08 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/vai-dong-ve-cuon-so/</guid>
      <description>Ch√∫ng ta th∆∞·ªùng hay ƒë∆∞·ª£c khuy√™n r·∫±ng n√™n c√≥ 1 cu·ªën s·ªï ghi ch√∫ b√™n m√¨nh ph√≤ng khi c√≥ 1 √Ω t∆∞·ªüng r·ªì d·∫°i n√†o ch·ª£t ƒë·∫øn. T√¥i c≈©ng ƒë√£ theo l·ªùi khuy√™n ·∫•y, c≈©ng c√≥ cu·ªën s·ªï c·ªßa ri√™ng m√¨nh, m√† th·∫≠t ra l√† nhi·ªÅu cu·ªën s·ªï.</description>
    </item>
    
    <item>
      <title>Hi·ªáu ·ª©ng m·ªìi (Priming effect)</title>
      <link>https://trinhngocthuyen.github.io/reasoning/hieu-ung-moi-priming-effect/</link>
      <pubDate>Sun, 01 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reasoning/hieu-ung-moi-priming-effect/</guid>
      <description>Hi·ªáu ·ª©ng m·ªìi (priming effect) l√† m·ªôt hi·ªáu ·ª©ng t√¢m l√Ω di·ªÖn ra trong n√£o b·ªô con ng∆∞·ªùi, khi k·∫øt qu·∫£ h√†nh ƒë·ªông c·ªßa m·ªôt ng∆∞·ªùi b·ªã ·∫£nh h∆∞·ªüng b·ªüi m·ªôt v√†i th√¥ng tin ng∆∞·ªùi ƒë√≥ ti·∫øp nh·∫≠n ƒë∆∞·ª£c tr∆∞·ªõc ƒë√≥</description>
    </item>
    
    <item>
      <title>ƒê·ªông n√£o: Alice, Betrice or Cynthia?</title>
      <link>https://trinhngocthuyen.github.io/reasoning/dong-nao-alice-betrice-cynthia/</link>
      <pubDate>Thu, 29 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reasoning/dong-nao-alice-betrice-cynthia/</guid>
      <description>M·ªôt ng∆∞·ªùi ƒëi k√©n v·ª£, v√† ƒë·ªãnh ch·ªçn m·ªôt trong ba c√¥ g√°i Alice, Beatrice v√† Cynthia r·ªìi c∆∞·ªõi. Bi·∫øt r·∫±ng m·ªói c√¥ g√°i ƒë·ªÅu lu√¥n n√≥i d·ªëi ho·∫∑c lu√¥n n√≥i th·∫≠t. M·ªôt trong ba c√¥ g√°i l√† ph√π th·ªßy nh∆∞ng kh√¥ng bi·∫øt r·∫±ng ph√π th·ªßy lu√¥n n√≥i d·ªëi hay lu√¥n n√≥i th·∫≠t. D∆∞·ªõi ƒë√¢y l√† nh·ªØng ƒëi·ªÅu m√† c√°c c√¥ g√°i n√≥i v·ªõi ch√†ng trai.
- Alice: Cynthia l√† ph√π th·ªßy.</description>
    </item>
    
    <item>
      <title>Lu·∫≠n UX: Ly cafe take-away</title>
      <link>https://trinhngocthuyen.github.io/reasoning/luan-ux-ly-cafe/</link>
      <pubDate>Sun, 25 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reasoning/luan-ux-ly-cafe/</guid>
      <description>M√¨nh r·∫•t th√≠ch ƒëi cafe m·∫∑c d√π ƒëa s·ªë nh·ªØng tr∆∞·ªùng h·ª£p ƒë·ªÅu ch·ªâ c√≥ 1 th√¢n 1 c√µi :D. M√¨nh c≈©ng l√† ƒë·ª©a t√≤ m√≤, hay c√≥ c√¢u h·ªèi v·ªÅ nh·ªØng th·ª© xung quanh nh∆∞ ‚Äúsao c√°nh c·ª≠a n√†y k·ª≥ k·ª≥?‚Äù, ‚Äúsao c√°i bi·ªÉn hi·ªáu n√†y l·∫°i treo ·ªü ƒë√¢y?‚Äù hay ‚Äúsao l√∫c ƒëi thang cu·ªën ng∆∞·ªùi ta hay v·ªãn tay v√†o thang‚Äù &amp;hellip; T√¨nh c·ªù m·ªôt h√¥m ƒëi cafe v·ªõi ƒë·ª©a b·∫°n, m√¨nh c√≥ 1 ph√°t hi·ªán nh·ªè v·ªÅ vi·ªác branding tr√™n ly cafe take-away&amp;hellip;</description>
    </item>
    
    <item>
      <title>Swift: Box with recursive data structure</title>
      <link>https://trinhngocthuyen.github.io/tech/swift-box-with-recursive-data-structure/</link>
      <pubDate>Sat, 17 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/swift-box-with-recursive-data-structure/</guid>
      <description>A workaround to model recursive data structure with enum</description>
    </item>
    
    <item>
      <title>Chuy·ªán NƒÉng Khi·∫øu: c√¥ lao c√¥ng</title>
      <link>https://trinhngocthuyen.github.io/misc/chuyen-nang-khieu-co-lao-cong/</link>
      <pubDate>Sun, 11 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/chuyen-nang-khieu-co-lao-cong/</guid>
      <description>NƒÉng Khi·∫øu, ngo√†i nh·ªØng c√¢u chuy·ªán ‚ÄúOlympic To√°n qu·ªëc t·∫ø‚Äù, ‚ÄúC·∫ßu truy·ªÅn h√¨nh Olympia‚Äù&amp;hellip; c√≤n c√≥ nh·ªØng c√¢u chuy·ªán ƒë·ªùi th∆∞·ªùng ‚Äì v·ªÅ nh·ªØng ng∆∞·ªùi b√¨nh th∆∞·ªùng ‚Äì v√† ƒë∆∞·ª£c vi·∫øt b·ªüi nh·ªØng ng∆∞·ªùi t·∫ßm th∆∞·ªùng.</description>
    </item>
    
    <item>
      <title>Chuy·ªán NƒÉng Khi·∫øu: YRMUPTP</title>
      <link>https://trinhngocthuyen.github.io/misc/chuyen-nang-khieu-yrmuptp/</link>
      <pubDate>Wed, 07 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/chuyen-nang-khieu-yrmuptp/</guid>
      <description>ƒê√£ 6 nƒÉm k·ªÉ t·ª´ l√∫c l·ªõp To√°n 0710 b∆∞·ªõc sang ni√™n h·ªçc cu·ªëi c·∫•p. H·∫ßu nh∆∞ ai c≈©ng t·∫•t b·∫≠t cho k·ª≥ thi ƒë·∫°i h·ªçc&amp;hellip; H·ªìi ƒë√≥ trong l·ªõp c√≥ m·ªôt h√¨nh th·ª©c h·ªçc nh√≥m t·ª± ph√°t r·∫•t hay. Kh·ªüi ƒë·∫ßu l√† m·ªôt nh√≥m (c·ªßa t·ªï 3) v·ªõi √Ω t∆∞·ªüng so·∫°n ƒë·ªÅ thi v√† t·ªï ch·ª©c thi th·ª≠ ƒë·ªÉ m·ªçi ng∆∞·ªùi quen d·∫ßn v·ªõi k·ª≥ thi ƒë·∫°i h·ªçc.</description>
    </item>
    
    <item>
      <title>RAC 3.0 with Login workflow</title>
      <link>https://trinhngocthuyen.github.io/tech/rac3-with-login-flow/</link>
      <pubDate>Sat, 22 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/rac3-with-login-flow/</guid>
      <description>A particular example of RAC 3.0, applied in Login workflow.</description>
    </item>
    
    <item>
      <title>Topology</title>
      <link>https://trinhngocthuyen.github.io/reasoning/topology/</link>
      <pubDate>Sat, 15 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reasoning/topology/</guid>
      <description>I hadn‚Äôt known Topology until a friend of mine gave me a quiz related to it. Though I still have no idea about the mathematical stuff, it has been drawing my attention due to some of its interesting facts&amp;hellip;</description>
    </item>
    
    <item>
      <title>Optional - Functional</title>
      <link>https://trinhngocthuyen.github.io/tech/optional-functional/</link>
      <pubDate>Tue, 16 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/tech/optional-functional/</guid>
      <description>A demonstration of lazy evaluation using a simple trick</description>
    </item>
    
    <item>
      <title>M√¥ h√¨nh ho√° b√†i to√°n b·∫±ng nh·ªØng ng∆∞·ªùi t√Ω hon</title>
      <link>https://trinhngocthuyen.github.io/reasoning/mo-hinh-hoa-bai-toan-bang-nhung-nguoi-ty-hon/</link>
      <pubDate>Sat, 17 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reasoning/mo-hinh-hoa-bai-toan-bang-nhung-nguoi-ty-hon/</guid>
      <description>B√†i vi·∫øt n√†y ƒë∆∞·ª£c migrated t·ª´ m·ªôt c√°i note tr√™n facebook c√° nh√¢n c·ªßa m√¨nh (v·ªën ch·ªâ gi·ªõi h·∫°n cho b·∫°n b√® xem).
&amp;hellip;
M·ªôt l·∫ßn, m√¨nh ƒë·ªçc ph∆∞∆°ng ph√°p ‚ÄúM√¥ h√¨nh h√≥a b√†i to√°n b·∫±ng nh·ªØng ng∆∞·ªùi t√Ω hon‚Äù trong s√°ch c·ªßa th·∫ßy Phan D≈©ng, th·∫•y c√°ch gi·∫£i kh√° ƒë·ªôc ƒë√°o n√™n share c√πng m·ªçi ng∆∞·ªùi. B√†i vi·∫øt n√†y h·∫ßu nh∆∞ l√† vi·∫øt l·∫°i n·ªôi dung m√† th·∫ßy Phan D≈©ng ƒë√£ tr√¨nh b√†y trong s√°ch [1].</description>
    </item>
    
    <item>
      <title>ƒê·ªë vui: b√†i to√°n t√≠nh qu√£ng ƒë∆∞·ªùng v√† vi·ªác hi·ªÉu b√†i to√°n</title>
      <link>https://trinhngocthuyen.github.io/reasoning/do-vui-hieu-bai-toan/</link>
      <pubDate>Sat, 27 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/reasoning/do-vui-hieu-bai-toan/</guid>
      <description>B√†i vi·∫øt n√†y ƒë∆∞·ª£c migrated t·ª´ m·ªôt c√°i note tr√™n facebook c√° nh√¢n c·ªßa m√¨nh (v·ªën ch·ªâ gi·ªõi h·∫°n cho b·∫°n b√® xem).
&amp;hellip;
B·∫°n n√†o th√≠ch ƒë·ªông n√£o, ph√¢n t√≠ch v·∫•n ƒë·ªÅ, h√£y c√πng nhau th·∫£o lu·∫≠n th·ª≠ nh√©!
M·ª•c ƒë√≠ch (thu·∫≠t ng·ªØ m√¥n h·ªçc PPLST&amp;amp;DM g·ªçi l√† &amp;ldquo;t√≠nh h·ªá th·ªëng&amp;rdquo;) c·ªßa post: Ch·ªâ ra nh·ªØng kh·∫£ nƒÉng c√≥ th·ªÉ ·∫£nh h∆∞·ªüng ƒë·∫øn k·∫øt qu·∫£ b√†i to√°n.
Ph√°t bi·ªÉu b√†i to√°n  Gi·∫£ s·ª≠ L·ª±c ƒëi b·ªô v·ªõi v·∫≠n t·ªëc 1 b∆∞·ªõc/gi√¢y (t∆∞∆°ng ·ª©ng v·ªõi 0.</description>
    </item>
    
    <item>
      <title>[L√Ω S∆°n v1] T·∫≠p cu·ªëi: H·ªôi ƒëua thuy·ªÅn T·ª© linh</title>
      <link>https://trinhngocthuyen.github.io/misc/ly-son-tap-7/</link>
      <pubDate>Fri, 07 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/ly-son-tap-7/</guid>
      <description>Tr·ªùi n·∫Øng oi b·ª©c‚Ä¶ ƒêang gi·ªØa tr∆∞a. T√¥i ch∆∞a th·∫•y ƒë∆∞·ªùng hoa n√†o ·ªü c√°c t·ªânh, th√†nh ph·ªë trong d·ªãp t·∫øt l·∫°i ƒë√¥ng v√† nh·ªôn nh·ªãp h∆°n ng∆∞·ªùi d√¢n ƒëi xem ƒëua thuy·ªÅn. ·ªû ƒë√¢y ƒë√¥ng nh∆∞ ƒëi xem ph√°o hoa 30 t·∫øt v·∫≠y. H·∫ßu nh∆∞ t·∫•t c·∫£ d√¢n ƒë·∫£o ƒë·ªÅu ƒë·∫øn xem ng√†y ƒëua cu·ªëi c√πng (m√πng 8 t·∫øt).</description>
    </item>
    
    <item>
      <title>[L√Ω S∆°n v1] T·∫≠p 6: Ch√πa Hang</title>
      <link>https://trinhngocthuyen.github.io/misc/ly-son-tap-6/</link>
      <pubDate>Thu, 06 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/ly-son-tap-6/</guid>
      <description>N∆°i ƒë√¢y c≈©ng c√≥ 1 v√°ch ƒë√° d·ª±ng ƒë·ª©ng cao nh∆∞ ·ªü Hang C√¢u. N·∫øu ·ªü Hang C√¢u, v√°ch ƒë√° ƒë∆∞·ª£c n∆∞·ªõc bi·ªÉn b√†o m√≤n nh·∫µn th√¨ ·ªü ch√πa Hang, ta th·∫•y ƒë√° nh√¥ ra t·ª´ng phi·∫øn. Ph·∫ßn ch√¢n v√°ch ƒë√° l√µm s√¢u v√†o b√™n trong h∆°n nhi·ªÅu so v·ªõi ·ªü Hang C√¢u. Ch√πa n·∫±m trong hang, ƒë∆∞·ª£c t·∫°o ra t·ª´ ph·∫ßn l√µm ƒë√≥.</description>
    </item>
    
    <item>
      <title>[L√Ω S∆°n v1] T·∫≠p 5: B√¨nh minh tr√™n n√∫i Th·ªõi L·ªõi</title>
      <link>https://trinhngocthuyen.github.io/misc/ly-son-tap-5/</link>
      <pubDate>Wed, 05 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/ly-son-tap-5/</guid>
      <description>Sau m·ªôt ƒë√™m ng·ªß ·ªü ch√πa Vƒ©nh √Çn, 5h20 ch√∫ng t√¥i xu·∫•t ph√°t b·∫±ng xe m√°y. Tr·ªùi l·ªù m·ªù, nh·ªØng con thuy·ªÅn neo ƒë·∫≠u g·∫ßn nh·ªØng b√£i ƒë√° ƒë·ª©ng l·∫∑ng y√™n. Kh√¥ng gian tƒ©nh m·ªãch, kh√¥ng c√≥ ti·∫øng s√≥ng, ch·ªâ c√≥ ti·∫øng xe m√°y ch·∫°y bon bon ƒëi v·ªÅ ph√≠a n√∫i Th·ªõi L·ªõi‚Ä¶</description>
    </item>
    
    <item>
      <title>[L√Ω S∆°n v1] T·∫≠p 3,4: Ch√πa ƒê·ª•c, s·ª± th√∫ v·ªã c·ªßa d√¢n ƒë·∫£o &amp; ho√†ng h√¥n</title>
      <link>https://trinhngocthuyen.github.io/misc/ly-son-tap-3-4/</link>
      <pubDate>Tue, 04 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/ly-son-tap-3-4/</guid>
      <description>Ch√∫ng t√¥i ti·∫øp t·ª•c cu·ªôc h√†nh tr√¨nh v·ªõi ƒë√≠ch ƒë·∫øn l√† ch√πa ƒê·ª•c v√† ƒë·ªânh Li√™m T·ª±. Ch√πa ƒê·ª•c t·ªça l·∫°c ·ªü th√¥n T√¢y, x√£ An Vƒ©nh, c√°ch C·∫£ng L√Ω S∆°n kh√¥ng xa, ch∆∞a t·ªõi 1km. Ch√πa n·∫±m tr√™n gi·ªØa s∆∞·ªùn n√∫i. Ta ph·∫£i leo men theo s∆∞·ªùn n√∫i ƒë√∫ng 100 b·∫≠c thang th√¨ g·∫∑p ch√πa. ·∫Æt h·∫≥n nh·ªØng b·∫°n tr·∫ª ƒëi v·ªõi s·ª± h√°o h·ª©c trong ng∆∞·ªùi khi l√™n c√°c b·∫≠c th·ªÅm ƒë·ªÅu gi·ªëng nh∆∞ t√¥i: v·ª´a leo v·ª´a ƒë·∫øm s·ªë b·∫≠c thang‚Ä¶</description>
    </item>
    
    <item>
      <title>[L√Ω S∆°n v1] T·∫≠p 2: Hang C√¢u v√† b·ªØa ti·ªác sinh nh·∫≠t</title>
      <link>https://trinhngocthuyen.github.io/misc/ly-son-tap-2/</link>
      <pubDate>Mon, 03 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/ly-son-tap-2/</guid>
      <description>C√≥ 2 may m·∫Øn r·∫•t l·ªõn trong chuy·∫øn ƒëi c·ªßa m√¨nh. Th·ª© nh·∫•t, m√¨nh c√≥ 1 ƒë·ª©a b·∫°n t√™n Ph·ª•ng, l√† ng∆∞·ªùi d√¢n ·ªü ƒë√¢y, ƒë√£ gi√∫p ƒë·ª° m√¨nh su·ªët 2 ng√†y trong vai tr√≤ l√† 1 h∆∞·ªõng d·∫´n vi√™n. May m·∫Øn th·ª© hai l√†, m√¨nh ƒë∆∞·ª£c quen v·ªõi nh·ªØng ng∆∞·ªùi b·∫°n c·ªßa Ph·ª•ng: Tr·∫°ch, Th·ª´a, C√≥, H·ªìng, T√≠ N·ªã, M·ªπ, Tuy·∫øt. Th·∫≠t t√¨nh c·ªù, h√¥m ·∫•y l√† sinh nh·∫≠t Trach. M·ªçi ng∆∞·ªùi r·ªß nhau ƒëi Hang C√¢u, v√† dƒ© nhi√™n m√¨nh c≈©ng nh·∫≠p b·ªçn‚Ä¶</description>
    </item>
    
    <item>
      <title>[L√Ω S∆°n v1] T·∫≠p 1: √Çm Linh T·ª±</title>
      <link>https://trinhngocthuyen.github.io/misc/ly-son-tap-1/</link>
      <pubDate>Sun, 02 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/ly-son-tap-1/</guid>
      <description>√Çm Linh T·ª± c√°ch c·∫£ng L√Ω S∆°n kh√¥ng xa, kho·∫£ng ch·ª´ng 100m. Ban ƒë·∫ßu ƒëo√†n kh√¥ng ƒë·ªãnh s·∫Ω gh√© thƒÉm √Çm Linh T·ª±, nh∆∞ng khi ƒëi ngang qua th·∫•y ki·∫øn tr√∫c t·ª± h∆°i l·∫°i n√™n v√†o xem th·ª≠. ·∫§n t∆∞·ª£ng ƒë·∫ßu ti√™n khtraveli b∆∞·ªõc v√†o √Çm Linh T·ª±: c√°i n√†y kh√¥ng gi·ªëng ch√πa ·ªü Nghƒ©a H√†nh, hay b·∫•t c·ª© 1 c√°i ch√πa n√†o m√¨nh t·ª´ng th·∫•y. N√≥ gi·ªëng nh∆∞ 1 c√°i ƒë√¨nh th·ªù ·ªü mi·ªÅn B·∫Øc h∆°n. V√† s·ª± th·∫≠t, n√≥ kh√¥ng ph·∫£i l√† ch√πa. Ng∆∞·ªùi ta g·ªçi ƒë√¢y l√† ‚ÄúlƒÉng‚Äù.</description>
    </item>
    
    <item>
      <title>[L√Ω S∆°n v1] T·∫≠p 0: T√†u cao t·ªëc An Vƒ©nh</title>
      <link>https://trinhngocthuyen.github.io/misc/ly-son-tap-0/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/misc/ly-son-tap-0/</guid>
      <description>Xu·∫•t ph√°t t·ª´ C·∫£ng Sa K·ª≥, ƒëo√†n c·ªßa m√¨nh g·ªìm c√≥ 2 ng∆∞·ªùi l√†: m√¨nh v√† ch√≠nh m√¨nh. M√¨nh g·∫∑p 3 thanh ni√™n ƒëi du l·ªãch v·ªõi nh·ªØng d·ª•ng c·ª• ƒë·ªì ngh·ªÅ nh√¨n r·∫•t chuy√™n nghi·ªáp. ƒê∆∞·ª£c bi·∫øt h·ªç ƒë·∫øn t·ª´ H√† N·ªôi v√† ƒëi L√Ω S∆°n l·∫ßn ƒë·∫ßu ti√™n sau chuy·∫øn ƒëi ·ªü Hu·∫ø. M√¨nh r·∫•t vui v√† h√°o h·ª©c, v√¨ n∆°i ƒë√¢y ƒë∆∞·ª£c nhi·ªÅu ng∆∞·ªùi bi·∫øt ƒë·∫øn v√† ng∆∞·ªùi ta c·ª© kh√°o nhau r·∫±ng ‚ÄúL√Ω S∆°n ƒë·∫πp l·∫Øm‚Äù‚Ä¶</description>
    </item>
    
    <item>
      <title>Search</title>
      <link>https://trinhngocthuyen.github.io/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://trinhngocthuyen.github.io/search/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>